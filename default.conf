server {
    # listen       80;
    # listen  [::]:80;
    listen       8080;
    listen  [::]:8080;
    server_name  localhost;
    # 需要host和container保持一样的端口号
    port_in_redirect on; 

    #access_log  /var/log/nginx/host.access.log  main;

    # 这种写法会301重定向, 从 http://localhost:8080/ppa -> http://localhost/ppa/ 为什么?
    # nginx static 模块点当发现访问目标是目录, 但是其结尾没有加 / 的时候, 会自动返回 301 重定向, 即上面说的过程.
    # 但是重定向到哪里呢? nginx 提供了配置 跳转时候到 domain 和 port的配置
    # domain 是要选择 nginx 配置文件的 server_name 还是 request header 的 HOST? 相关的配置有以下3个:
    # server_name_in_redirect -> default to off 要不要优先使用 server_name 的值作为重定向到 domain 值
    # port_in_redirect -> default to on, 要不要保留port ??? 这个默认的是 on 吗? 是的. 我自己遇到的问题是, 因为我原本让nginx listen的端口就是80, 所以即便是重定向保留端口, 由于80是默认端口所以会被忽略不现实, 就造成了我遇到的问题. 所以我将nginx listen的端口改成8080就可以正常看到正确的301跳转地址.
    # absolute_redirect -> default to on, 要不要用绝对路径, 即在Location头部中使用完整的URL 而不是相对的URL
    # location /ppa {
    #     alias   /usr/share/nginx/html/;
    #     index  index.html index.htm;
    # }

    location /app {
        # 需要是用 / 结尾才可以
        alias   /usr/share/nginx/html/; 
        index  index.html index.htm;
    }

    location / {
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    
    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
